# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# resources folder, mainly resources provided by Professor Yu
resources/

# datasets, zip and unzipped files
database_zip_files/
a-large-scale-12-lead-electrocardiogram-database-for-arrhythmia-study-1.0.0.zip
a-large-scale-12-lead-electrocardiogram-database-for-arrhythmia-study-1.0.0/
mit-bih-arrhythmia-database-1.0.0.zip
mit-bih-arrhythmia-database/
csnecg_preprocessed_data/
csnecg_segments_10peaks.hdf5
csnecg_segments.hdf5

# old code
legacy/

# output plots
output_plots/
output_plots_draft1/
output_plots_roshancnn/
output_plots_roshancnn_draft1/
csnecg_output_plots/
ecg_plots/

# helper scripts
extract_record_structure.py
text_files.py
create_ms_word_appendix.py
code_appendix.html
data_test.py
gpu_env_check.py
analyze_label_stats.py
visualize_ecg_peaks.py